{"ast":null,"code":"import { ApiError } from \"./ApiError\";\nexport default class ApiResponseHandler {\n  constructor({\n    responseMapper = undefined,\n    handlesSuccess = undefined,\n    handlesError = undefined\n  }) {\n    this._responseMapper = responseMapper || {};\n    this._handlesError = handlesError;\n    this._handlesSuccess = handlesSuccess;\n  }\n  static for(response, handler) {\n    const responseMapper = {\n      [response]: handler\n    };\n    return new this({\n      responseMapper: responseMapper\n    });\n  }\n  handles(response, handler) {\n    const responseMapper = {\n      [response]: handler\n    };\n    const newResponseHandler = new ApiResponseHandler({\n      responseMapper\n    });\n    return this.mergeWith(newResponseHandler);\n  }\n  handlesSuccess(handler) {\n    return new ApiResponseHandler({\n      responseMapper: this._responseMapper,\n      handlesSuccess: handler,\n      handlesError: this._handlesError\n    });\n  }\n  handlesError(handler) {\n    return new ApiResponseHandler({\n      responseMapper: this._responseMapper,\n      handlesSuccess: this._handlesSuccess,\n      handlesError: handler\n    });\n  }\n  responseMapper() {\n    return this._responseMapper;\n  }\n  mergeWith(anotherErrorHandler = undefined) {\n    if (!anotherErrorHandler) {\n      return this;\n    }\n    const anotherResponseMapper = anotherErrorHandler.responseMapper();\n    const newResponseMapper = {\n      ...this._responseMapper,\n      ...anotherResponseMapper\n    };\n    const newHandlesError = anotherErrorHandler._handlesError || this._handlesError;\n    const handlesSuccess = anotherErrorHandler._handlesSuccess || this._handlesSuccess;\n    return new ApiResponseHandler({\n      responseMapper: newResponseMapper,\n      handlesSuccess: handlesSuccess,\n      handlesError: newHandlesError\n    });\n  }\n  async handleResponseForRequest(response, request) {\n    if (!response.hasError() && this._handlesSuccess) {\n      return this._handlesSuccess(response, request);\n    }\n    const handler = this._responseMapper[response.constructor];\n    if (handler) {\n      return await handler(response, request);\n    }\n    if (this._handlesError) {\n      return this._handlesError(response, request);\n    }\n    throw new ApiError();\n  }\n}","map":{"version":3,"names":["ApiError","ApiResponseHandler","constructor","responseMapper","undefined","handlesSuccess","handlesError","_responseMapper","_handlesError","_handlesSuccess","for","response","handler","handles","newResponseHandler","mergeWith","anotherErrorHandler","anotherResponseMapper","newResponseMapper","newHandlesError","handleResponseForRequest","request","hasError"],"sources":["/Users/marianoezequielgomez/Desktop/Ing-Software1-Leveroni/1c2024-tuslibrosweb-grupo-14/frontend/node_modules/@eryxcoop/appyx-comm/src/errors/ApiResponseHandler.js"],"sourcesContent":["import {ApiError} from \"./ApiError\";\n\nexport default class ApiResponseHandler {\n    constructor({responseMapper = undefined, handlesSuccess = undefined, handlesError = undefined}) {\n        this._responseMapper = responseMapper || {};\n        this._handlesError = handlesError;\n        this._handlesSuccess = handlesSuccess;\n    }\n\n    static for(response, handler) {\n        const responseMapper = {\n            [response]: handler,\n        };\n        return new this({responseMapper: responseMapper});\n    }\n\n    handles(response, handler) {\n        const responseMapper = {\n            [response]: handler,\n        };\n        const newResponseHandler = new ApiResponseHandler({responseMapper});\n        return this.mergeWith(newResponseHandler);\n    }\n\n    handlesSuccess(handler) {\n        return new ApiResponseHandler({\n            responseMapper: this._responseMapper,\n            handlesSuccess: handler,\n            handlesError: this._handlesError\n        });\n    }\n\n    handlesError(handler) {\n        return new ApiResponseHandler({\n            responseMapper: this._responseMapper,\n            handlesSuccess: this._handlesSuccess,\n            handlesError: handler\n        });\n    }\n\n    responseMapper() {\n        return this._responseMapper;\n    }\n\n    mergeWith(anotherErrorHandler = undefined) {\n        if (!anotherErrorHandler) {\n            return this;\n        }\n        const anotherResponseMapper = anotherErrorHandler.responseMapper();\n        const newResponseMapper = {\n            ...this._responseMapper,\n            ...anotherResponseMapper,\n        };\n        const newHandlesError = anotherErrorHandler._handlesError || this._handlesError;\n        const handlesSuccess = anotherErrorHandler._handlesSuccess || this._handlesSuccess;\n        return new ApiResponseHandler(\n            {\n                responseMapper: newResponseMapper,\n                handlesSuccess: handlesSuccess,\n                handlesError: newHandlesError\n            });\n    }\n\n    async handleResponseForRequest(response, request) {\n        if (!response.hasError() && this._handlesSuccess) {\n            return this._handlesSuccess(response, request);\n        }\n\n        const handler = this._responseMapper[response.constructor];\n        if (handler) {\n            return await handler(response, request);\n        }\n        if (this._handlesError) {\n            return this._handlesError(response, request);\n        }\n        throw new ApiError();\n    }\n}\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,YAAY;AAEnC,eAAe,MAAMC,kBAAkB,CAAC;EACpCC,WAAWA,CAAC;IAACC,cAAc,GAAGC,SAAS;IAAEC,cAAc,GAAGD,SAAS;IAAEE,YAAY,GAAGF;EAAS,CAAC,EAAE;IAC5F,IAAI,CAACG,eAAe,GAAGJ,cAAc,IAAI,CAAC,CAAC;IAC3C,IAAI,CAACK,aAAa,GAAGF,YAAY;IACjC,IAAI,CAACG,eAAe,GAAGJ,cAAc;EACzC;EAEA,OAAOK,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC1B,MAAMT,cAAc,GAAG;MACnB,CAACQ,QAAQ,GAAGC;IAChB,CAAC;IACD,OAAO,IAAI,IAAI,CAAC;MAACT,cAAc,EAAEA;IAAc,CAAC,CAAC;EACrD;EAEAU,OAAOA,CAACF,QAAQ,EAAEC,OAAO,EAAE;IACvB,MAAMT,cAAc,GAAG;MACnB,CAACQ,QAAQ,GAAGC;IAChB,CAAC;IACD,MAAME,kBAAkB,GAAG,IAAIb,kBAAkB,CAAC;MAACE;IAAc,CAAC,CAAC;IACnE,OAAO,IAAI,CAACY,SAAS,CAACD,kBAAkB,CAAC;EAC7C;EAEAT,cAAcA,CAACO,OAAO,EAAE;IACpB,OAAO,IAAIX,kBAAkB,CAAC;MAC1BE,cAAc,EAAE,IAAI,CAACI,eAAe;MACpCF,cAAc,EAAEO,OAAO;MACvBN,YAAY,EAAE,IAAI,CAACE;IACvB,CAAC,CAAC;EACN;EAEAF,YAAYA,CAACM,OAAO,EAAE;IAClB,OAAO,IAAIX,kBAAkB,CAAC;MAC1BE,cAAc,EAAE,IAAI,CAACI,eAAe;MACpCF,cAAc,EAAE,IAAI,CAACI,eAAe;MACpCH,YAAY,EAAEM;IAClB,CAAC,CAAC;EACN;EAEAT,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACI,eAAe;EAC/B;EAEAQ,SAASA,CAACC,mBAAmB,GAAGZ,SAAS,EAAE;IACvC,IAAI,CAACY,mBAAmB,EAAE;MACtB,OAAO,IAAI;IACf;IACA,MAAMC,qBAAqB,GAAGD,mBAAmB,CAACb,cAAc,CAAC,CAAC;IAClE,MAAMe,iBAAiB,GAAG;MACtB,GAAG,IAAI,CAACX,eAAe;MACvB,GAAGU;IACP,CAAC;IACD,MAAME,eAAe,GAAGH,mBAAmB,CAACR,aAAa,IAAI,IAAI,CAACA,aAAa;IAC/E,MAAMH,cAAc,GAAGW,mBAAmB,CAACP,eAAe,IAAI,IAAI,CAACA,eAAe;IAClF,OAAO,IAAIR,kBAAkB,CACzB;MACIE,cAAc,EAAEe,iBAAiB;MACjCb,cAAc,EAAEA,cAAc;MAC9BC,YAAY,EAAEa;IAClB,CAAC,CAAC;EACV;EAEA,MAAMC,wBAAwBA,CAACT,QAAQ,EAAEU,OAAO,EAAE;IAC9C,IAAI,CAACV,QAAQ,CAACW,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACb,eAAe,EAAE;MAC9C,OAAO,IAAI,CAACA,eAAe,CAACE,QAAQ,EAAEU,OAAO,CAAC;IAClD;IAEA,MAAMT,OAAO,GAAG,IAAI,CAACL,eAAe,CAACI,QAAQ,CAACT,WAAW,CAAC;IAC1D,IAAIU,OAAO,EAAE;MACT,OAAO,MAAMA,OAAO,CAACD,QAAQ,EAAEU,OAAO,CAAC;IAC3C;IACA,IAAI,IAAI,CAACb,aAAa,EAAE;MACpB,OAAO,IAAI,CAACA,aAAa,CAACG,QAAQ,EAAEU,OAAO,CAAC;IAChD;IACA,MAAM,IAAIrB,QAAQ,CAAC,CAAC;EACxB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}