{"ast":null,"code":"import { Requester } from \"./Requester\";\nimport UnexpectedErrorResponse from \"../responses/generalResponses/UnexpectedErrorResponse\";\nimport MultiPartEncoder from \"./encoders/MultiPartEncoder.js\";\nimport JsonEncoder from \"./encoders/JsonEncoder.js\";\nexport default class RemoteRequester extends Requester {\n  constructor(url, authorizationManager) {\n    super();\n    this._baseUrl = url;\n    this._authorizationManager = authorizationManager;\n  }\n  call({\n    endpoint,\n    data = undefined\n  }) {\n    const request = this._buildRequest(endpoint, data);\n    let url = endpoint.url();\n    if (endpoint.isGetMethod() && data) {\n      url += \"?\" + this._dataToQueryString(data);\n    }\n    return fetch(this._baseUrl + \"/\" + url, request).then(result => {\n      return endpoint.convertBodyResponse(result);\n    }).then(jsonResponse => {\n      return this._buildResponse(jsonResponse, endpoint);\n    });\n  }\n  _buildRequest(endpoint, data) {\n    let headers = this._buildHeadersFor(endpoint);\n    let requestOptions = {\n      method: endpoint.method(),\n      headers: headers,\n      credentials: 'include' // include cookie credentials\n    };\n    if (endpoint.method() !== 'GET') {\n      let encoder = this._encoderFor(endpoint.contentType());\n      Object.assign(headers, encoder.headers());\n      Object.assign(requestOptions, {\n        body: encoder.encode(data)\n      });\n    }\n    return requestOptions;\n  }\n  _buildResponse(jsonResponse, endpoint) {\n    const availableResponsesForEndpoint = endpoint.responses();\n    for (let responseType of availableResponsesForEndpoint) {\n      if (responseType.understandThis(jsonResponse)) {\n        return new responseType(jsonResponse);\n      }\n    }\n    return new UnexpectedErrorResponse(jsonResponse);\n  }\n  _buildHeadersFor(endpoint) {\n    let headers = {};\n    if (endpoint.contentType() && endpoint.contentType() !== \"multipart/form-data\") {\n      headers['Content-Type'] = endpoint.contentType();\n    }\n    if (endpoint.needsAuthorization()) {\n      this._authorizationManager.configureHeaders(headers);\n    }\n    return headers;\n  }\n  _dataToQueryString(data) {\n    let keyValuePairs = [];\n    for (let i = 0; i < Object.keys(data).length; i += 1) {\n      let key = Object.keys(data)[i];\n      let value = Object.values(data)[i];\n      if (value) {\n        keyValuePairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n      }\n    }\n    return keyValuePairs.join('&');\n  }\n  _encoderFor(contentType) {\n    let encoders = [new JsonEncoder(), new MultiPartEncoder()];\n    return encoders.find(enc => enc.accepts(contentType));\n  }\n}","map":{"version":3,"names":["Requester","UnexpectedErrorResponse","MultiPartEncoder","JsonEncoder","RemoteRequester","constructor","url","authorizationManager","_baseUrl","_authorizationManager","call","endpoint","data","undefined","request","_buildRequest","isGetMethod","_dataToQueryString","fetch","then","result","convertBodyResponse","jsonResponse","_buildResponse","headers","_buildHeadersFor","requestOptions","method","credentials","encoder","_encoderFor","contentType","Object","assign","body","encode","availableResponsesForEndpoint","responses","responseType","understandThis","needsAuthorization","configureHeaders","keyValuePairs","i","keys","length","key","value","values","push","encodeURIComponent","join","encoders","find","enc","accepts"],"sources":["/Users/marianoezequielgomez/Desktop/Ing-Software1-Leveroni/1c2024-tuslibrosweb-grupo-14/frontend/node_modules/@eryxcoop/appyx-comm/src/requester/RemoteRequester.js"],"sourcesContent":["import {Requester} from \"./Requester\";\nimport UnexpectedErrorResponse from \"../responses/generalResponses/UnexpectedErrorResponse\";\nimport MultiPartEncoder from \"./encoders/MultiPartEncoder.js\";\nimport JsonEncoder from \"./encoders/JsonEncoder.js\";\n\n\nexport default class RemoteRequester extends Requester {\n  constructor(url, authorizationManager) {\n    super();\n    this._baseUrl = url;\n    this._authorizationManager = authorizationManager;\n  }\n\n  call({endpoint, data = undefined}) {\n    const request = this._buildRequest(endpoint, data);\n    let url = endpoint.url();\n    if (endpoint.isGetMethod() && data) {\n      url += \"?\" + this._dataToQueryString(data);\n    }\n\n    return fetch(this._baseUrl + \"/\" + url, request)\n      .then((result) => {\n        return endpoint.convertBodyResponse(result);\n      })\n      .then(jsonResponse => {\n        return this._buildResponse(jsonResponse, endpoint)\n      })\n  }\n\n  _buildRequest(endpoint, data) {\n    let headers = this._buildHeadersFor(endpoint);\n    let requestOptions = {\n      method: endpoint.method(),\n      headers: headers,\n      credentials: 'include', // include cookie credentials\n    };\n\n    if (endpoint.method() !== 'GET') {\n      let encoder = this._encoderFor(endpoint.contentType());\n      Object.assign(headers, encoder.headers());\n      Object.assign(requestOptions, {body: encoder.encode(data)});\n    }\n\n    return requestOptions;\n  }\n\n  _buildResponse(jsonResponse, endpoint) {\n    const availableResponsesForEndpoint = endpoint.responses();\n    for (let responseType of availableResponsesForEndpoint) {\n      if (responseType.understandThis(jsonResponse)) {\n        return new responseType(jsonResponse);\n      }\n    }\n    return new UnexpectedErrorResponse(jsonResponse);\n  }\n\n  _buildHeadersFor(endpoint) {\n    let headers = {};\n    if (endpoint.contentType() && endpoint.contentType() !== \"multipart/form-data\") {\n      headers['Content-Type'] = endpoint.contentType();\n    }\n\n    if (endpoint.needsAuthorization()) {\n      this._authorizationManager.configureHeaders(headers);\n    }\n\n    return headers;\n  }\n\n  _dataToQueryString(data) {\n    let keyValuePairs = [];\n    for (let i = 0; i < Object.keys(data).length; i += 1) {\n      let key = Object.keys(data)[i];\n      let value = Object.values(data)[i];\n      if (value) {\n        keyValuePairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n      }\n    }\n    return keyValuePairs.join('&');\n  }\n\n  _encoderFor(contentType) {\n    let encoders = [new JsonEncoder(), new MultiPartEncoder()];\n    return encoders.find(enc => enc.accepts(contentType));\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}